// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Quotes API
 *
 * API for quotes
 *
 * API version: 1.0.0
 */

package quotes

import (
	"context"
	"errors"
	"net/http"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() *DefaultAPIService {
	return &DefaultAPIService{}
}

// ListQuotes - request multiple quotes
func (s *DefaultAPIService) ListQuotes(ctx context.Context, id []int32, customerId []int32, limit int32, skip int32, order string) (ImplResponse, error) {
	// TODO - update ListQuotes with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Quote{}) or use other options such as http.Ok ...
	// return Response(200, []Quote{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListQuotes method not implemented")
}

// CreateQuote - create quote
func (s *DefaultAPIService) CreateQuote(ctx context.Context, quote Quote) (ImplResponse, error) {
	// TODO - update CreateQuote with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, CreateQuote201Response{}) or use other options such as http.Ok ...
	// return Response(201, CreateQuote201Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateQuote method not implemented")
}

// GetQuote -
func (s *DefaultAPIService) GetQuote(ctx context.Context, id int32) (ImplResponse, error) {
	// TODO - update GetQuote with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Quote{}) or use other options such as http.Ok ...
	// return Response(200, Quote{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetQuote method not implemented")
}

// UpdateQuote - update quote
func (s *DefaultAPIService) UpdateQuote(ctx context.Context, id int32, quote Quote) (ImplResponse, error) {
	// TODO - update UpdateQuote with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateQuote method not implemented")
}

// DeleteQuote - delete quote by id
func (s *DefaultAPIService) DeleteQuote(ctx context.Context, id int32) (ImplResponse, error) {
	// TODO - update DeleteQuote with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteQuote method not implemented")
}

// UpdateQuotes - update quotes
func (s *DefaultAPIService) UpdateQuotes(ctx context.Context, quote []Quote) (ImplResponse, error) {
	// TODO - update UpdateQuotes with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateQuotes method not implemented")
}

// CreateQuotes - create quotes
func (s *DefaultAPIService) CreateQuotes(ctx context.Context, quote []Quote) (ImplResponse, error) {
	// TODO - update CreateQuotes with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, QuotesIds{}) or use other options such as http.Ok ...
	// return Response(201, QuotesIds{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateQuotes method not implemented")
}

// DeleteQuotes - delete quotes
func (s *DefaultAPIService) DeleteQuotes(ctx context.Context, quotesIds QuotesIds) (ImplResponse, error) {
	// TODO - update DeleteQuotes with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteQuotes method not implemented")
}
